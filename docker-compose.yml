version: '3.3'
services:

  redis:
    image: redis
    restart: always
    ports:
      - 6379

  search:
    image: elasticsearch:5.5
    restart: always
    ports:
      - 9200
    environment:
      - bootstrap.memory_lock=true  # https://www.elastic.co/guide/en/elasticsearch/reference/master/setup-configuration-memory.html#mlockall
    env_file: .env
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 8g
    volumes:
       - ${OYE_ELASTIC_DATA}:/usr/share/elasticsearch/data

  rabbitmq:
    image: 'rabbitmq:3'
    restart: always
    entrypoint: /app/rabbitmq-entrypoint.sh
    env_file: .env
    ports:
      - 5672
    volumes:
      - ./docker/rabbitmq-entrypoint.sh:/app/rabbitmq-entrypoint.sh
      - rabbit:/var/lib/rabbitmq

  kibana:
    labels:
      com.example.service: "kibana"
      com.example.description: "Data visualisation and for log aggregation"
    image: kibana:5.4.3
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://search:9200
    depends_on:
      - search

  logstash:
    labels:
      com.example.service: "logstash"
      com.example.description: "For logging data"
    image: logstash:5.4.3
    volumes:
       - ./docker/logstash.conf:/logstash_dir/logstash.conf
    command: logstash -f /logstash_dir/logstash.conf
    depends_on:
      - search

  web: &web
    image: oyelogic:latest
    restart: always
    entrypoint: /app/docker-entrypoint.sh
    env_file: .env
    depends_on:
      - redis
      - search
      - rabbitmq
    ports:
      - '8000:8000'
    volumes:
      - ${DOCKER_HOST_OYE_MEDIA_ROOT}:${MEDIA_ROOT}
      - ${DOCKER_HOST_OYE_STATIC_ROOT}:${STATIC_ROOT}
      - ${DOCKER_HOST_OYE_INVOICES_ROOT}:${PDF_STORAGE_ROOT}
      - ${DOCKER_HOST_ORIGINAL_IMAGES_ROOT}:/var/www/images/
      - ./logs/:/srv/logs/

  celeryworker:
    image: oyelogic:latest
    restart: always
    env_file: .env
    depends_on:
      - redis
      - rabbitmq
    entrypoint: /app/celery-entrypoint.sh
    volumes:
      - ${DOCKER_HOST_OYE_MEDIA_ROOT}:${MEDIA_ROOT}
      - ${DOCKER_HOST_OYE_INVOICES_ROOT}:${PDF_STORAGE_ROOT}
      - ./docker/celery-entrypoint.sh:/app/celery-entrypoint.sh
      - ./wait-for-it.sh:/wait-for-it.sh

  celerybeat:
    image: oyelogic:latest
    restart: always
    env_file: .env
    depends_on:
      - rabbitmq
    entrypoint: /app/celerybeat-entrypoint.sh
    volumes:
      - ./docker/celerybeat-entrypoint.sh:/app/celerybeat-entrypoint.sh
      - ./wait-for-it.sh:/wait-for-it.sh

volumes:
  rabbit:
    driver: local

