name: Create tag and release on release PR merge
on:
  pull_request:
    types:
     - closed

jobs:
  run-release-trigger:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
    env:
      GH_REF: ${{ github.event.pull_request.head.ref }}
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Prepare release tag version
        id: prepare-tag
        run: echo "PR_TAG_REF=$GH_REF" | sed "s/release-//" >> $GITHUB_OUTPUT
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.prepare-tag.outputs.PR_TAG_REF }}",
              sha: context.sha
            })
      - name: Create github release
        run: |
          gh release create "${{ steps.prepare-tag.outputs.PR_TAG_REF }}" --repo="$GITHUB_REPOSITORY" --generate-notes --draft --verify-tag
    outputs:
      version: ${{ steps.prepare-tag.outputs.PR_TAG_REF }}

  publish:
    needs:
      - run-release-trigger
    uses: ./.github/workflows/publish-containers.yml
    with:
      version: ${{ needs.run-release-trigger.outputs.version }}
      ref: ${{ needs.run-release-trigger.outputs.version }}
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CLOUD_CI_WEBHOOK_URL }}
      SLACK_MENTION_GROUP_ID: ${{ secrets.SLACK_CORE_SUPPORT_GROUP_ID }}

  deploy:
    runs-on: ubuntu-20.04
    needs:
      - publish
    steps:
      - name: Trigger staging deployment for tagged release
        run: |
          GITHUB_TOKEN=$( \
            curl --request GET --url ${{ secrets.VAULT_URL}} --header "Authorization: JWT ${{ secrets.VAULT_JWT }}" | jq -r .token \
          )

          curl -f -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/saleor/saleor-multitenant/dispatches \
            -d "{\"event_type\":\"deploy-staging\",\"client_payload\":{\"version\":\"${{ needs.publish.outputs.version }}\"}}"
