# Generated by Django 3.2.18 on 2023-04-17 08:00

from django.db import migrations
<<<<<<< HEAD

from django.apps import apps as registry
from django.db.models.signals import post_migrate

from .tasks.saleor3_9 import set_description_plaintext_task


def set_description_plaintext_migration(apps, _schema_editor):
    def on_migrations_complete(sender=None, **kwargs):
        set_description_plaintext_task.delay()

    sender = registry.get_app_config("product")
    post_migrate.connect(on_migrations_complete, weak=False, sender=sender)


class Migration(migrations.Migration):

=======
from django.db.models import Q
from ...core.utils.editorjs import clean_editor_js

BATCH_SIZE = 2000


def queryset_in_batches(queryset):
    start_pk = 0

    while True:
        qs = queryset.order_by("pk").filter(pk__gt=start_pk)[:BATCH_SIZE]
        pks = list(qs.values_list("pk", flat=True))

        if not pks:
            break

        yield pks

        start_pk = pks[-1]


def set_description_plaintext_if_description_exists(apps, schema_editor):
    Product = apps.get_model("product", "Product")
    queryset = Product.objects.filter(
        Q(description_plaintext="") & ~Q(description=None)
    )

    for batch_pks in queryset_in_batches(queryset):
        products = Product.objects.filter(pk__in=batch_pks)
        for product in products:
            product.description_plaintext = clean_editor_js(
                product.description, to_string=True
            )
            product.search_index_dirty = True

        Product.objects.bulk_update(
            products, ["description_plaintext", "search_index_dirty"]
        )


class Migration(migrations.Migration):
>>>>>>> main
    dependencies = [
        ("product", "0177_product_tax_class_producttype_tax_class"),
    ]

    operations = [
        migrations.RunPython(
<<<<<<< HEAD
            set_description_plaintext_migration, migrations.RunPython.noop
=======
            set_description_plaintext_if_description_exists, migrations.RunPython.noop
>>>>>>> main
        )
    ]
