# Generated by Django 3.2.20 on 2023-08-24 11:25

from django.db import migrations, transaction, connection


PAGE_BATCH_SIZE = 5000


def data_migration(apps, _schema_editor):
    AssignedPageAttributeValue = apps.get_model(
        "attribute", "AssignedPageAttributeValue"
    )
    assign_pages_to_attribute_values(AssignedPageAttributeValue)


class Migration(migrations.Migration):
    dependencies = [
        ("page", "0028_add_default_page_type"),
        ("attribute", "0033_assignedpageattributevalue_page_add_index"),
    ]

    operations = [
        migrations.RunPython(data_migration, migrations.RunPython.noop),
    ]


def assign_pages_to_attribute_values(AssignedPageAttributeValue):
    """Celery task to update 'AssignedPageAttributeValue' rows in batches.

    Checks for rows where the 'page' is null and updates them based on their
    related 'assignment'. After updating a batch, the task schedules
    itself for the next batch if more rows need updating.
    """
    assigned_values = (
        AssignedPageAttributeValue.objects.filter(page__isnull=True)
        .values_list("pk", flat=True)
        .exists()
    )
    # If we found data, queue next execution of the task
    if assigned_values:
        update_page_assignment()
        assign_pages_to_attribute_values(AssignedPageAttributeValue)


def update_page_assignment():
    """Update Page assignment.

    Update a batch of 'AssignedPageAttributeValue' rows by setting their 'page' based
    on their related 'assignment'.

    The number of rows updated in each batch is determined by the BATCH_SIZE.
    Rows are locked during the update to prevent concurrent modifications.
    """
    with transaction.atomic():
        with connection.cursor() as cursor:
            cursor.execute(
                """
                WITH limited AS (
                SELECT av.id
                FROM attribute_assignedpageattributevalue AS av
                WHERE av.page_id IS NULL
                ORDER BY av.id DESC
                LIMIT %s
                FOR UPDATE
            )
            UPDATE attribute_assignedpageattributevalue AS av
            SET page_id = apa.page_id
            FROM attribute_assignedpageattribute AS apa
            WHERE av.id IN (SELECT id FROM limited)
            AND av.assignment_id = apa.id;
            """,  # noqa
                [PAGE_BATCH_SIZE],
            )
