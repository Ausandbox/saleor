# Generated by Django 3.2.18 on 2023-05-08 19:16

from django.db import migrations
from django.db import transaction
from django.db.models import F

BATCH_SIZE = 5000


def chunks(lst, batch_size):
    for i in range(0, len(lst), batch_size):
        yield lst[i : i + batch_size]


def order_update_number_as_str_task(apps, _schema_editor):
    Order = apps.get_model("order", "Order")
    orders = Order.objects.filter(number_as_str__isnull=True).order_by("-updated_at")
    ids = orders.values_list("pk", flat=True)
    with transaction.atomic():
        for chunk in chunks(ids, BATCH_SIZE):
            qs = Order.objects.filter(pk__in=chunk)
            # lock the batch of objects
            _orders = list(qs.select_for_update(of=(["self"])))
            qs.update(number_as_str=F("number"))


class Migration(migrations.Migration):
    dependencies = [
        ("order", "0165_order_number_as_str"),
    ]

    operations = [
        migrations.RunPython(
            order_update_number_as_str_task,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
