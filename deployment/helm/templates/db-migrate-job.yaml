---
{{- if (eq .Values.django.init.migrations true) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "saleor.fullname" . }}-db-migrate
  labels:
    app: {{ template "saleor.name" . }}
    chart: {{ template "saleor.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  activeDeadlineSeconds: 300
  backoffLimit: 5
  parallelism: 1
  completions: 1
  template:
    metadata:
      name: {{ template "saleor.fullname" . }}-db-migrate
      labels:
        app: {{ template "saleor.name" . }}
        chart: {{ template "saleor.chart" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
    {{- end }}
      volumes:
        - name: custom-settings
          configMap:
          {{- if (not .Values.django.alternativeConfigMap) }}
            name: saleor-custom-settings
          {{- else }}
            name: {{ .Values.django.alternativeConfigMap }}
          {{- end }}
      restartPolicy: OnFailure
      containers:
        - name: {{ template "saleor.fullname" . }}-db-migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python3", "manage.py", "migrate"]

          envFrom:
          {{- if .Values.existingSecret }}
            - secretRef:
                name: {{ .Values.existingSecret }}
          {{- else }}
            - secretRef:
                name: {{ template "saleor.fullname" . }}-secrets
          {{- end }}
            - configMapRef:
                name: {{ template "saleor.fullname" . }}-env-{{ .Release.Namespace }}
          env:
          {{ if and (eq .Values.postgresql.enabled true) (eq .Values.postgresql.useExternalUrl false)  }}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.postgresql.existingSecret }}
                  name: {{ .Values.postgresql.existingSecret }}
                {{- else }}
                  name: {{ .Release.Name }}-postgresql
                {{- end }}
                  key: postgres-password
          {{- end }}
          {{ if and (eq .Values.redis.enabled true) (eq .Values.redis.usePassword true) (eq .Values.redis.useExternalUrl false) }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.redis.existingSecret }}
                  name: {{ .Values.redis.existingSecret }}
                {{- else }}
                  name: {{ .Release.Name }}-redis
                {{- end }}
                  key: redis-password
          {{- end }}

            - name: DATABASE_URL
              value: "postgres://$(POSTGRESQL_USER):$(POSTGRESQL_PASSWORD)@$(POSTGRESQL_HOST):$(POSTGRESQL_PORT)/$(POSTGRESQL_DATABASE)"

          {{- if and (eq .Values.elasticsearch.enabled true) (eq .Values.elasticsearch.useExternalUrl false) }}
            - name: ELASTICSEARCH_URL
              value: "http://$(ELASTICSEARCH_HOST):$(ELASTICSEARCH_PORT)"
          {{- else if (eq .Values.elasticsearch.useExternalUrl true) }}
            - name: ELASTICSEARCH_URL
              value: "https://$(ELASTICSEARCH_USER):$(ELASTICSEARCH_PASSWORD)@$(ELASTICSEARCH_HOST):$(ELASTICSEARCH_PORT)"
          {{- end }}

            - name: REDIS_URL
          {{- if or (eq .Values.redis.useExternalUrl true) (eq .Values.redis.usePassword true) }}
              value: "redis://$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(REDIS_DB_NUMBER)"
          {{- else }}
              value: "redis://$(REDIS_HOST):$(REDIS_PORT)/$(REDIS_DB_NUMBER)"
          {{- end }}

            - name: CELERY_BROKER_URL
          {{- if or (eq .Values.redis.useExternalUrl true) (eq .Values.redis.usePassword true) }}
              value: "redis://$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(CELERY_BROKER_DB_NUMBER)"
          {{- else }}
              value: "redis://$(REDIS_HOST):$(REDIS_PORT)/$(CELERY_BROKER_DB_NUMBER)"
          {{- end }}
          volumeMounts:
            - name: custom-settings
              mountPath: /app/saleor/custom-settings.py
              subPath: custom-settings.py
              readOnly: true
{{- end -}}
